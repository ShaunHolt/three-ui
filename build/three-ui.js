import{IoInspector,IoProperties}from"../../io/build/io-core.js";import{WebGLRenderer,Scene,PerspectiveCamera,OrthographicCamera,Vector2,Vector3,MOUSE as MOUSE$1,Quaternion,Spherical}from"../../three.js/build/three.module.js";import{IoElement,IoNode}from"../../io/build/io.js";var REVISION="108",MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},CullFaceNone=0,CullFaceBack=1,CullFaceFront=2,CullFaceFrontBack=3,FrontFaceDirectionCW=0,FrontFaceDirectionCCW=1,BasicShadowMap=0,PCFShadowMap=1,PCFSoftShadowMap=2,VSMShadowMap=3,FrontSide=0,BackSide=1,DoubleSide=2,FlatShading=1,SmoothShading=2,NoColors=0,FaceColors=1,VertexColors=2,NoBlending=0,NormalBlending=1,AdditiveBlending=2,SubtractiveBlending=3,MultiplyBlending=4,CustomBlending=5,AddEquation=100,SubtractEquation=101,ReverseSubtractEquation=102,MinEquation=103,MaxEquation=104,ZeroFactor=200,OneFactor=201,SrcColorFactor=202,OneMinusSrcColorFactor=203,SrcAlphaFactor=204,OneMinusSrcAlphaFactor=205,DstAlphaFactor=206,OneMinusDstAlphaFactor=207,DstColorFactor=208,OneMinusDstColorFactor=209,SrcAlphaSaturateFactor=210,NeverDepth=0,AlwaysDepth=1,LessDepth=2,LessEqualDepth=3,EqualDepth=4,GreaterEqualDepth=5,GreaterDepth=6,NotEqualDepth=7,MultiplyOperation=0,MixOperation=1,AddOperation=2,NoToneMapping=0,LinearToneMapping=1,ReinhardToneMapping=2,Uncharted2ToneMapping=3,CineonToneMapping=4,ACESFilmicToneMapping=5,UVMapping=300,CubeReflectionMapping=301,CubeRefractionMapping=302,EquirectangularReflectionMapping=303,EquirectangularRefractionMapping=304,SphericalReflectionMapping=305,CubeUVReflectionMapping=306,CubeUVRefractionMapping=307,RepeatWrapping=1e3,ClampToEdgeWrapping=1001,MirroredRepeatWrapping=1002,NearestFilter=1003,NearestMipmapNearestFilter=1004,NearestMipMapNearestFilter=1004,NearestMipmapLinearFilter=1005,NearestMipMapLinearFilter=1005,LinearFilter=1006,LinearMipmapNearestFilter=1007,LinearMipMapNearestFilter=1007,LinearMipmapLinearFilter=1008,LinearMipMapLinearFilter=1008,UnsignedByteType=1009,ByteType=1010,ShortType=1011,UnsignedShortType=1012,IntType=1013,UnsignedIntType=1014,FloatType=1015,HalfFloatType=1016,UnsignedShort4444Type=1017,UnsignedShort5551Type=1018,UnsignedShort565Type=1019,UnsignedInt248Type=1020,AlphaFormat=1021,RGBFormat=1022,RGBAFormat=1023,LuminanceFormat=1024,LuminanceAlphaFormat=1025,RGBEFormat=RGBAFormat,DepthFormat=1026,DepthStencilFormat=1027,RedFormat=1028,RGB_S3TC_DXT1_Format=33776,RGBA_S3TC_DXT1_Format=33777,RGBA_S3TC_DXT3_Format=33778,RGBA_S3TC_DXT5_Format=33779,RGB_PVRTC_4BPPV1_Format=35840,RGB_PVRTC_2BPPV1_Format=35841,RGBA_PVRTC_4BPPV1_Format=35842,RGBA_PVRTC_2BPPV1_Format=35843,RGB_ETC1_Format=36196,RGBA_ASTC_4x4_Format=37808,RGBA_ASTC_5x4_Format=37809,RGBA_ASTC_5x5_Format=37810,RGBA_ASTC_6x5_Format=37811,RGBA_ASTC_6x6_Format=37812,RGBA_ASTC_8x5_Format=37813,RGBA_ASTC_8x6_Format=37814,RGBA_ASTC_8x8_Format=37815,RGBA_ASTC_10x5_Format=37816,RGBA_ASTC_10x6_Format=37817,RGBA_ASTC_10x8_Format=37818,RGBA_ASTC_10x10_Format=37819,RGBA_ASTC_12x10_Format=37820,RGBA_ASTC_12x12_Format=37821,LoopOnce=2200,LoopRepeat=2201,LoopPingPong=2202,InterpolateDiscrete=2300,InterpolateLinear=2301,InterpolateSmooth=2302,ZeroCurvatureEnding=2400,ZeroSlopeEnding=2401,WrapAroundEnding=2402,TrianglesDrawMode=0,TriangleStripDrawMode=1,TriangleFanDrawMode=2,LinearEncoding=3e3,sRGBEncoding=3001,GammaEncoding=3007,RGBEEncoding=3002,LogLuvEncoding=3003,RGBM7Encoding=3004,RGBM16Encoding=3005,RGBDEncoding=3006,BasicDepthPacking=3200,RGBADepthPacking=3201,TangentSpaceNormalMap=0,ObjectSpaceNormalMap=1,ZeroStencilOp=0,KeepStencilOp=7680,ReplaceStencilOp=7681,IncrementStencilOp=7682,DecrementStencilOp=7683,IncrementWrapStencilOp=34055,DecrementWrapStencilOp=34056,InvertStencilOp=5386,NeverStencilFunc=512,LessStencilFunc=513,EqualStencilFunc=514,LessEqualStencilFunc=515,GreaterStencilFunc=516,NotEqualStencilFunc=517,GreaterEqualStencilFunc=518,AlwaysStencilFunc=519,THREE=Object.freeze({REVISION:REVISION,MOUSE:MOUSE,TOUCH:TOUCH,CullFaceNone:CullFaceNone,CullFaceBack:CullFaceBack,CullFaceFront:CullFaceFront,CullFaceFrontBack:CullFaceFrontBack,FrontFaceDirectionCW:FrontFaceDirectionCW,FrontFaceDirectionCCW:FrontFaceDirectionCCW,BasicShadowMap:BasicShadowMap,PCFShadowMap:PCFShadowMap,PCFSoftShadowMap:PCFSoftShadowMap,VSMShadowMap:VSMShadowMap,FrontSide:FrontSide,BackSide:BackSide,DoubleSide:DoubleSide,FlatShading:FlatShading,SmoothShading:SmoothShading,NoColors:NoColors,FaceColors:FaceColors,VertexColors:VertexColors,NoBlending:NoBlending,NormalBlending:NormalBlending,AdditiveBlending:AdditiveBlending,SubtractiveBlending:SubtractiveBlending,MultiplyBlending:MultiplyBlending,CustomBlending:CustomBlending,AddEquation:AddEquation,SubtractEquation:SubtractEquation,ReverseSubtractEquation:ReverseSubtractEquation,MinEquation:MinEquation,MaxEquation:MaxEquation,ZeroFactor:ZeroFactor,OneFactor:OneFactor,SrcColorFactor:SrcColorFactor,OneMinusSrcColorFactor:OneMinusSrcColorFactor,SrcAlphaFactor:SrcAlphaFactor,OneMinusSrcAlphaFactor:OneMinusSrcAlphaFactor,DstAlphaFactor:DstAlphaFactor,OneMinusDstAlphaFactor:OneMinusDstAlphaFactor,DstColorFactor:DstColorFactor,OneMinusDstColorFactor:OneMinusDstColorFactor,SrcAlphaSaturateFactor:SrcAlphaSaturateFactor,NeverDepth:NeverDepth,AlwaysDepth:AlwaysDepth,LessDepth:LessDepth,LessEqualDepth:LessEqualDepth,EqualDepth:EqualDepth,GreaterEqualDepth:GreaterEqualDepth,GreaterDepth:GreaterDepth,NotEqualDepth:NotEqualDepth,MultiplyOperation:MultiplyOperation,MixOperation:MixOperation,AddOperation:AddOperation,NoToneMapping:NoToneMapping,LinearToneMapping:LinearToneMapping,ReinhardToneMapping:ReinhardToneMapping,Uncharted2ToneMapping:Uncharted2ToneMapping,CineonToneMapping:CineonToneMapping,ACESFilmicToneMapping:ACESFilmicToneMapping,UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,SphericalReflectionMapping:SphericalReflectionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping,RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping,NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipMapNearestFilter:NearestMipMapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,NearestMipMapLinearFilter:NearestMipMapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipMapNearestFilter:LinearMipMapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter,LinearMipMapLinearFilter:LinearMipMapLinearFilter,UnsignedByteType:UnsignedByteType,ByteType:ByteType,ShortType:ShortType,UnsignedShortType:UnsignedShortType,IntType:IntType,UnsignedIntType:UnsignedIntType,FloatType:FloatType,HalfFloatType:HalfFloatType,UnsignedShort4444Type:UnsignedShort4444Type,UnsignedShort5551Type:UnsignedShort5551Type,UnsignedShort565Type:UnsignedShort565Type,UnsignedInt248Type:UnsignedInt248Type,AlphaFormat:AlphaFormat,RGBFormat:RGBFormat,RGBAFormat:RGBAFormat,LuminanceFormat:LuminanceFormat,LuminanceAlphaFormat:LuminanceAlphaFormat,RGBEFormat:RGBEFormat,DepthFormat:DepthFormat,DepthStencilFormat:DepthStencilFormat,RedFormat:RedFormat,RGB_S3TC_DXT1_Format:RGB_S3TC_DXT1_Format,RGBA_S3TC_DXT1_Format:RGBA_S3TC_DXT1_Format,RGBA_S3TC_DXT3_Format:RGBA_S3TC_DXT3_Format,RGBA_S3TC_DXT5_Format:RGBA_S3TC_DXT5_Format,RGB_PVRTC_4BPPV1_Format:RGB_PVRTC_4BPPV1_Format,RGB_PVRTC_2BPPV1_Format:RGB_PVRTC_2BPPV1_Format,RGBA_PVRTC_4BPPV1_Format:RGBA_PVRTC_4BPPV1_Format,RGBA_PVRTC_2BPPV1_Format:RGBA_PVRTC_2BPPV1_Format,RGB_ETC1_Format:RGB_ETC1_Format,RGBA_ASTC_4x4_Format:RGBA_ASTC_4x4_Format,RGBA_ASTC_5x4_Format:RGBA_ASTC_5x4_Format,RGBA_ASTC_5x5_Format:RGBA_ASTC_5x5_Format,RGBA_ASTC_6x5_Format:RGBA_ASTC_6x5_Format,RGBA_ASTC_6x6_Format:RGBA_ASTC_6x6_Format,RGBA_ASTC_8x5_Format:RGBA_ASTC_8x5_Format,RGBA_ASTC_8x6_Format:RGBA_ASTC_8x6_Format,RGBA_ASTC_8x8_Format:RGBA_ASTC_8x8_Format,RGBA_ASTC_10x5_Format:RGBA_ASTC_10x5_Format,RGBA_ASTC_10x6_Format:RGBA_ASTC_10x6_Format,RGBA_ASTC_10x8_Format:RGBA_ASTC_10x8_Format,RGBA_ASTC_10x10_Format:RGBA_ASTC_10x10_Format,RGBA_ASTC_12x10_Format:RGBA_ASTC_12x10_Format,RGBA_ASTC_12x12_Format:RGBA_ASTC_12x12_Format,LoopOnce:LoopOnce,LoopRepeat:LoopRepeat,LoopPingPong:LoopPingPong,InterpolateDiscrete:InterpolateDiscrete,InterpolateLinear:InterpolateLinear,InterpolateSmooth:InterpolateSmooth,ZeroCurvatureEnding:ZeroCurvatureEnding,ZeroSlopeEnding:ZeroSlopeEnding,WrapAroundEnding:WrapAroundEnding,TrianglesDrawMode:TrianglesDrawMode,TriangleStripDrawMode:TriangleStripDrawMode,TriangleFanDrawMode:TriangleFanDrawMode,LinearEncoding:LinearEncoding,sRGBEncoding:sRGBEncoding,GammaEncoding:GammaEncoding,RGBEEncoding:RGBEEncoding,LogLuvEncoding:LogLuvEncoding,RGBM7Encoding:RGBM7Encoding,RGBM16Encoding:RGBM16Encoding,RGBDEncoding:RGBDEncoding,BasicDepthPacking:BasicDepthPacking,RGBADepthPacking:RGBADepthPacking,TangentSpaceNormalMap:TangentSpaceNormalMap,ObjectSpaceNormalMap:ObjectSpaceNormalMap,ZeroStencilOp:ZeroStencilOp,KeepStencilOp:KeepStencilOp,ReplaceStencilOp:ReplaceStencilOp,IncrementStencilOp:IncrementStencilOp,DecrementStencilOp:DecrementStencilOp,IncrementWrapStencilOp:IncrementWrapStencilOp,DecrementWrapStencilOp:DecrementWrapStencilOp,InvertStencilOp:InvertStencilOp,NeverStencilFunc:NeverStencilFunc,LessStencilFunc:LessStencilFunc,EqualStencilFunc:EqualStencilFunc,LessEqualStencilFunc:LessEqualStencilFunc,GreaterStencilFunc:GreaterStencilFunc,NotEqualStencilFunc:NotEqualStencilFunc,GreaterEqualStencilFunc:GreaterEqualStencilFunc,AlwaysStencilFunc:AlwaysStencilFunc});function makeOptions(e){const t=[];for(let n=0;n<e.length;n++)t.push({value:THREE[e[n]],label:e[n]});return t}const floatSlider=["io-number-slider",{min:0,max:1,step:.001}],matrixProp=["io-properties",{properties:["elements"],labeled:!1,config:{elements:["io-matrix"]}}],propProp=["io-properties"],textureFormatOptions=makeOptions(["AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_ETC1_Format"]);textureFormatOptions.push({label:"DXT Formats",options:makeOptions(["RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format"])}),textureFormatOptions.push({label:"PVRTC Formats",options:makeOptions(["RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format"])}),textureFormatOptions.push({label:"ASTC Formats",options:makeOptions(["RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format"])});const configs={"type:boolean":["io-switch"],"constructor:Vector2":["io-vector"],"constructor:Vector3":["io-vector"],"constructor:Vector4":["io-vector"],"constructor:Matrix2":matrixProp,"constructor:Matrix3":matrixProp,"constructor:Matrix4":matrixProp,"constructor:Euler":["io-vector",{step:Math.PI/12,conversion:180/Math.PI}],"constructor:Quaternion":["io-vector"],"constructor:Color":["io-color-vector"],scale:["io-vector",{linkable:!0}],"constructor:Sphere":propProp,"Object3D|drawMode":["io-option-menu",{options:makeOptions(["TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode"])}],"Object3D|castShadow":["io-switch"],"Object3D|receiveShadow":["io-switch"],"BufferGeometry|constructor:Object":propProp,"Material|opacity":floatSlider,"Material|reflectivity":floatSlider,"Material|refractionRatio":floatSlider,"Material|aoMapIntensity":floatSlider,"Material|emissiveIntensity":floatSlider,"Material|side":["io-option-menu",{options:makeOptions(["FrontSide","BackSide","DoubleSide"])}],"Material|shading":["io-option-menu",{options:makeOptions(["FlatShading","SmoothShading"])}],"Material|vertexColors":["io-option-menu",{options:makeOptions(["NoColors","FaceColors","VertexColors"])}],"Material|blending":["io-option-menu",{options:makeOptions(["NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending"])}],"Material|blendEquation":["io-option-menu",{options:makeOptions(["AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation"])}],"Material|blendEquationAlpha":["io-option-menu",{options:makeOptions(["AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation"])}],"Material|blendSrc":["io-option-menu",{options:makeOptions(["ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor"])}],"Material|blendDst":["io-option-menu",{options:makeOptions(["ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor"])}],"Material|blendSrcAlpha":["io-option-menu",{options:makeOptions(["ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor"])}],"Material|blendDstAlpha":["io-option-menu",{options:makeOptions(["ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor"])}],"Material|depthFunc":["io-option-menu",{options:makeOptions(["NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth"])}],"Material|combine":["io-option-menu",{options:makeOptions(["MultiplyOperation","MixOperation","AddOperation"])}],"Material|shadowSide":["io-option-menu",{options:makeOptions(["BackSide","FrontSide","DoubleSide"])}],"Material|stencilFunc":["io-option-menu",{options:makeOptions(["NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc"])}],"Material|stencilFail":["io-option-menu",{options:makeOptions(["ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp"])}],"Material|stencilZFail":["io-option-menu",{options:makeOptions(["ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp"])}],"Material|stencilZPass":["io-option-menu",{options:makeOptions(["ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp"])}],"Material|depthPacking":["io-option-menu",{options:makeOptions(["BasicDepthPacking","RGBADepthPacking"])}],"Material|normalMapType":["io-option-menu",{options:makeOptions(["TangentSpaceNormalMap","ObjectSpaceNormalMap"])}],"Texture|mapping":["io-option-menu",{options:makeOptions(["UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping"])}],"Texture|wrapS":["io-option-menu",{options:makeOptions(["RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping"])}],"Texture|wrapT":["io-option-menu",{options:makeOptions(["RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping"])}],"Texture|minFilter":["io-option-menu",{options:makeOptions(["NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter"])}],"Texture|magFilter":["io-option-menu",{options:makeOptions(["NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter"])}],"Texture|type":["io-option-menu",{options:makeOptions(["UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type"])}],"Texture|encoding":["io-option-menu",{options:makeOptions(["LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding"])}],"Texture|format":["io-option-menu",{options:textureFormatOptions}],"Texture|unpackAlignment":["io-option-menu",{options:makeOptions(["1","2","4","8"])}],"WebGLRenderer|toneMapping":["io-option-menu",{options:makeOptions(["NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping"])}],"WebGLShadowMap|type":["io-option-menu",{options:makeOptions(["BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap"])}],"AnimationAction|loop":["io-option-menu",{options:makeOptions(["LoopOnce","LoopRepeat","LoopPingPong"])}],"KeyframeTrack|loop":["io-option-menu",{options:makeOptions(["InterpolateDiscrete","InterpolateLinear","InterpolateSmooth"])}],"Camera|fov":["io-number-slider",{min:.001,max:180,step:1}],"Camera|zoom":["io-number-slider",{min:.001,max:100}],"Camera|near":["io-number-slider",{min:.001,max:1e5}],"Camera|far":["io-number-slider",{min:.001,max:1e5}]},groups={"Object|properties":["name","visible","userData","map"],"Object3D|properties":["name","parent","children","material","geometry"],"Object3D|transform":["position","rotation","scale","quaternion","up",/update/i],"Object3D|rendering":["layers",/shadow/i,"renderOrder","frustumCulled","background","fog","overrideMaterial","drawMode"],"Object3D|matrices":[/matrix/i],"Light|properties":["color","groundColor","intensity"],"Light|transform":["target"],"Camera|properties":["fov","near","far","zoom","focus","aspect","view","filmGauge","filmOffset"],"BufferGeometry|properties":["boundingBox","boundingSphere","groups"],"BufferGeometry|attributes":["index","attributes","morphAttributes","drawRange"],"Material|properties":["transparent","opacity","color",/Map/,/emissive/i,"reflectivity","refractionRatio"],"Material|rendering":["side","fog","lights","flatShading","vertexTangents","vertexColors","toneMapped"],"Material|blending":[/blend/i,"colorWrite","depthTest","depthWrite","dithering","premultipliedAlpha","alphaTest","depthFunc","combine"],"Material|stencil":[/stencil/i],"Material|shadows":[/shadow/i],"Material|wireframe":[/line/i,"wireframe"],"Material|advanced":[/polygon/i,"precision","program","skinning","morphTargets","morphNormals","clipIntersection","clippingPlanes"],"Object|advanced":["needsUpdate"],"Object|hidden":[/^is/,"type","id","uuid"],"Array|values":[/^[0-9]+$/]};class ThreeInspector extends IoInspector{static get Properties(){return{autoExpand:["properties","transform","values"]}}static get Listeners(){return{mousedown:"stopPropagation",mouseup:"stopPropagation",mousemove:"stopPropagation",touchstart:"stopPropagation",touchmove:"stopPropagation",touchend:"stopPropagation",keydown:"stopPropagation",keyup:"stopPropagation","io-value-set":"_onIoValueSet"}}static get Config(){return configs}static get Groups(){return groups}stopPropagation(e){e.stopPropagation()}_onIoValueSet(){this.dispatchEvent("change")}}IoProperties.RegisterConfig(configs),ThreeInspector.Register(),ThreeInspector.RegisterGroups({});const renderer=new WebGLRenderer({antialias:!1,preserveDrawingBuffer:!0,alpha:!0}),gl=renderer.getContext();let host;renderer.domElement.className="canvas3d",renderer.gammaFactor=2.2,renderer.gammaInput=!0,renderer.gammaOutput=!0,renderer.shadowMap.enabled=!0,renderer.setClearColor(0,1),renderer.autoClear=!1;let perfWarned,perfNow=0,perfDelta=1e3,perfAverage=1e3;const _performanceCheck=function(){perfWarned||(perfDelta=performance.now()-perfNow,perfAverage=Math.min((10*perfAverage+perfDelta)/11,1e3),perfNow=performance.now(),perfAverage<16&&(console.warn("ThreeRenderer performance warning: rendering multiple canvases!"),perfWarned=!0))},renderedQueue=[],renderNextQueue=[],animate=function(){for(let e=0;e<renderedQueue.length;e++)renderedQueue[e].rendered=!1;renderedQueue.length=0;for(let e=0;e<renderNextQueue.length;e++)renderNextQueue[e].scheduled=!1,renderNextQueue[e].render();renderNextQueue.length=0,requestAnimationFrame(animate)};requestAnimationFrame(animate);class ThreeRenderer extends IoElement{static get Style(){return"\n\t\t:host {\n\t\t\tdisplay: block;\n\t\t\toverflow: hidden;\n\t\t\tposition: relative;\n\t\t\ttouch-action: none;\n\t\t\tuser-select: none;\n\t\t\tbox-sizing: border-box;\n\t\t}\n\t\t:host:focus {\n\t\t\tz-index: 2;\n\t\t}\n\t\t:host > canvas {\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 100% !important;\n\t\t\theight: 100% !important;\n\t\t\tpointer-events: none;\n\t\t\timage-rendering: optimizeSpeed; /* Older versions of FF */\n\t\t\timage-rendering: -moz-crisp-edges; /* FF 6.0+ */\n\t\t\timage-rendering: -webkit-optimize-contrast; /* Safari */\n\t\t\timage-rendering: -o-crisp-edges; /* OS X & Windows Opera (12.02+) */\n\t\t\timage-rendering: pixelated; /* Awesome future-browsers */\n\t\t\t-ms-interpolation-mode: nearest-neighbor;\n\t\t}\n\t\t:host[ishost] > canvas:not(.canvas3d) {\n\t\t\tdisplay: none;\n\t\t}\n\t\t"}static get Properties(){return{scene:{type:Scene,observe:!0},camera:{type:PerspectiveCamera,observe:!0},ishost:{type:Boolean,reflect:1},size:[0,0],tabindex:1,clearColor:0,clearAlpha:1}}static get Listeners(){return{dragstart:"preventDefault"}}get renderer(){return renderer}constructor(e){super(e),this.template([["canvas",{id:"canvas"}]]),this._ctx=this.$.canvas.getContext("2d"),this.$.canvas.imageSmoothingEnabled=!1}sceneChanged(){this.queueRender()}cameraChanged(){this.queueRender()}sceneMutated(){this.queueRender()}cameraMutated(){this.queueRender()}queueRender(){this.scheduled||(renderNextQueue.push(this),this.scheduled=!0)}render(){!this.rendered&&this._ctx?(this.setHost(),this.updateCameraAspect(),this.preRender(),this.renderer.clear(),this.renderer.render(this.scene,this.camera),this.postRender(),renderedQueue.push(this),this.rendered=!0):this.queueRender()}preRender(){}postRender(){}updateCameraAspect(){if(this.size[0]&&this.size[1]){const e=this.size[0]/this.size[1];if(this.camera instanceof PerspectiveCamera&&(this.camera.aspect=e),this.camera instanceof OrthographicCamera){const t=(this.camera.top-this.camera.bottom)/2;let n=t*e;this.camera.top=t,this.camera.bottom=-t,this.camera.right=n,this.camera.left=-n,this.camera.updateMatrix(),this.camera.updateMatrixWorld()}this.camera.updateProjectionMatrix()}}setHost(){if(!this.ishost){if(host){const e=window.devicePixelRatio||1;host._ctx.clearRect(0,0,host.size[0]*e,host.size[1]*e),host._ctx.drawImage(host.renderer.domElement,0,0,host.size[0]*e,host.size[1]*e),gl.flush(),host.ishost=!1}host=this,this.appendChild(this.renderer.domElement),this.ishost=!0,_performanceCheck()}this.size[0]&&this.size[1]&&(this.renderer.setSize(this.size[0],this.size[1]),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setClearColor(this.clearColor,this.clearAlpha))}onResized(){const e=this.getBoundingClientRect();this.size[0]=Math.ceil(e.width),this.size[1]=Math.ceil(e.height);const t=window.devicePixelRatio||1;this.$.canvas.width=this.size[0]*t,this.$.canvas.height=this.size[1]*t,this.size[0]&&this.size[1]&&(this.renderer.setSize(this.size[0],this.size[1]),this.renderer.setPixelRatio(window.devicePixelRatio)),this.render()}}ThreeRenderer.Register();class Pointers extends IoNode{static get Properties(){return{enabled:!0}}constructor(e={}){super(e),this.domElements=[],this.pointers=new WeakMap,this.onPointerdown=this.onPointerdown.bind(this),this.onPointerhover=this.onPointerhover.bind(this),this.onPointermove=this.onPointermove.bind(this),this.onPointerup=this.onPointerup.bind(this),this.onContextmenu=this.onContextmenu.bind(this),this.onWheel=this.onWheel.bind(this),this.onKeydown=this.onKeydown.bind(this),this.onKeyup=this.onKeyup.bind(this),this.onFocus=this.onFocus.bind(this),this.onBlur=this.onBlur.bind(this)}attachElement(e){-1===this.domElements.indexOf(e)&&(e.addEventListener("pointerdown",this.onPointerdown),e.addEventListener("pointermove",this.onPointerhover),e.addEventListener("pointerup",this.onPointerup),e.addEventListener("pointerleave",this.onPointerleave),e.addEventListener("contextmenu",this.onContextmenu),e.addEventListener("wheel",this.onWheel),e.addEventListener("keydown",this.onKeydown),e.addEventListener("keyup",this.onKeyup),e.addEventListener("focus",this.onFocus),e.addEventListener("blur",this.onBlur),this.domElements.push(e)),this.pointers.set(e,{})}detachElement(e){-1!==this.domElements.indexOf(e)&&(this.domElements.splice(this.domElements.indexOf(e),1),e.removeEventListener("pointerdown",this.onPointerdown),e.removeEventListener("pointermove",this.onPointerhover),e.removeEventListener("pointerup",this.onPointerup),e.removeEventListener("pointerleave",this.onPointerleave),e.removeEventListener("contextmenu",this.onContextmenu),e.removeEventListener("wheel",this.onWheel),e.removeEventListener("keydown",this.onKeydown),e.removeEventListener("keyup",this.onKeyup),e.removeEventListener("focus",this.onFocus),e.removeEventListener("blur",this.onBlur)),this.pointers.delete(e)}dispose(){super.dispose();for(let e=this.domElements.length;e--;)this.detachElement(this.domElements[e]);delete this.domElements,delete this.pointers,delete this.onPointerdown,delete this.onPointerhover,delete this.onPointermove,delete this.onPointerup,delete this.onContextmenu,delete this.onWheel,delete this.onKeydown,delete this.onKeyup,delete this.onFocus,delete this.onBlur}onPointerdown(e){if(!this.enabled)return!1;e.target.setPointerCapture(e.pointerId);const t=this.pointers.get(e.target);t[e.pointerId]=new Pointer(e),this.dispatchEvent("pointerdown",{event:e,pointers:[t[e.pointerId]]})}onPointerhover(e){if(!this.enabled)return!1;const t=this.pointers.get(e.target);t[e.pointerId]=new Pointer(e),0===e.buttons?this.dispatchEvent("pointerhover",{event:e,pointers:[t[e.pointerId]]}):this.onPointermove(e)}onPointermove(e){if(!this.enabled)return!1;const t=this.pointers.get(e.target);t[e.pointerId]=new Pointer(e,t[e.pointerId].start);const n=[];for(let e in t)n.push(t[e]);this.dispatchEvent("pointermove",{event:e,pointers:n})}onPointerup(e){if(!this.enabled)return!1;e.target.releasePointerCapture(e.pointerId);const t=this.pointers.get(e.target),n=new Pointer(e,t[e.pointerId].start);delete t[e.pointerId],this.dispatchEvent("pointerup",{event:e,pointers:[n]})}onPointerleave(e){if(!this.enabled)return!1;const t=this.pointers.get(e.target),n=new Pointer(e);delete t[e.pointerId],this.dispatchEvent("pointerleave",{event:e,pointers:[n]})}onContextmenu(e){if(!this.enabled)return!1;this.dispatchEvent("contextmenu",{event:e})}onKeydown(e){if(!this.enabled)return!1;this.dispatchEvent("keydown",{event:e})}onKeyup(e){if(!this.enabled)return!1;this.dispatchEvent("keyup",{event:e})}onWheel(e){if(!this.enabled)return!1;this.dispatchEvent("wheel",{event:e})}onFocus(e){if(!this.enabled)return!1;this.dispatchEvent("focus",{event:e})}onBlur(e){if(!this.enabled)return!1;this.dispatchEvent("blur",{event:e})}}Pointers.Register();class Pointer{constructor(e,t){const n=e.target.getBoundingClientRect(),i=1===e.buttons||3===e.buttons||5===e.buttons||7===e.buttons,o=2===e.buttons||6===e.buttons,a=4===e.buttons,r=e.offsetX/n.width*2-1,s=e.offsetY/n.height*-2+1,p=e.movementX/n.width*2,l=e.movementY/n.height*-2;return t=t||{x:r,y:s},{pointerId:e.pointerId,target:e.target,rect:n,type:e.type,pointerType:e.pointerType,position:{x:r,y:s},movement:{x:p,y:l},previous:{x:r-p,y:s-l},start:{x:t.x,y:t.y},distance:{x:r-t.x,y:s-t.y},buttons:e.buttons,button:i?0:o?1:a?2:-1,ctrlKey:e.ctrlKey,altKey:e.altKey,shiftKey:e.shiftKey}}}class Tool extends IoNode{static get Properties(){return{enabled:!0,active:!1,state:-1,scene:Scene,helperScene:Scene,viewports:[],cameras:WeakMap,pointers:Pointers}}get compose(){return{pointers:{enabled:this.bind("enabled")}}}constructor(e){super(e),this.pointers.addEventListener("pointerdown",this.onViewportPointerdown.bind(this)),this.pointers.addEventListener("pointerhover",this.onViewportPointerhover.bind(this)),this.pointers.addEventListener("pointermove",this.onViewportPointermove.bind(this)),this.pointers.addEventListener("pointerup",this.onViewportPointerup.bind(this)),this.pointers.addEventListener("pointerleave",this.onViewportPointerleave.bind(this)),this.pointers.addEventListener("contextmenu",this.onViewportContextmenu.bind(this)),this.pointers.addEventListener("scroll",this.onViewportWheel.bind(this)),this.pointers.addEventListener("wheel",this.onViewportWheel.bind(this)),this.pointers.addEventListener("keydown",this.onViewportKeydown.bind(this)),this.pointers.addEventListener("keyup",this.onViewportKeyup.bind(this)),this.pointers.addEventListener("focus",this.onViewportFocus.bind(this)),this.pointers.addEventListener("blur",this.onViewportBlur.bind(this)),e&&e.domElement&&e.camera&&this.attachViewport(e.domElement,e.camera)}enabledChanged(){this.pointers.enabled=this.enabled}attachViewport(e,t){-1===this.viewports.indexOf(e)&&this.viewports.push(e),this.pointers.attachElement(e),this.cameras.set(e,t)}detachViewport(e){-1!==this.viewports.indexOf(e)&&this.viewports.splice(this.viewports.indexOf(e),1),this.pointers.detachElement(e),this.cameras.delete(e)}onViewportPointerdown(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=e.detail.pointers,i=this.cameras.get(t),o=t.getBoundingClientRect();this.dispatchEvent("pointerdown",{event:e.detail.event,target:t,rect:o,pointers:n,camera:i})}onViewportPointerhover(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=e.detail.pointers,i=this.cameras.get(t),o=t.getBoundingClientRect();this.dispatchEvent("pointerhover",{event:e.detail.event,target:t,rect:o,pointers:n,camera:i})}onViewportPointermove(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=e.detail.pointers,i=this.cameras.get(t),o=t.getBoundingClientRect();this.dispatchEvent("pointermove",{event:e.detail.event,target:t,rect:o,pointers:n,camera:i})}onViewportPointerup(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=e.detail.pointers,i=this.cameras.get(t),o=t.getBoundingClientRect();this.dispatchEvent("pointerup",{event:e.detail.event,target:t,rect:o,pointers:n,camera:i})}onViewportPointerleave(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=e.detail.pointers,i=this.cameras.get(t),o=t.getBoundingClientRect();this.dispatchEvent("pointerleave",{event:e.detail.event,target:t,rect:o,pointers:n,camera:i})}onViewportContextmenu(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=this.cameras.get(t),i=t.getBoundingClientRect();this.dispatchEvent("contextmenu",{event:e.detail.event,target:t,rect:i,camera:n})}onViewportKeydown(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=this.cameras.get(t),i=t.getBoundingClientRect();this.dispatchEvent("keydown",{event:e.detail.event,target:t,rect:i,camera:n})}onViewportKeyup(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=this.cameras.get(t),i=t.getBoundingClientRect();this.dispatchEvent("keyup",{event:e.detail.event,target:t,rect:i,camera:n})}onViewportWheel(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=this.cameras.get(t),i=t.getBoundingClientRect();this.dispatchEvent("wheel",{event:e.detail.event,target:t,rect:i,camera:n})}onViewportFocus(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=this.cameras.get(t),i=t.getBoundingClientRect();this.dispatchEvent("focus",{event:e.detail.event,target:t,rect:i,camera:n})}onViewportBlur(e){if(!this.enabled)return!1;const t=e.detail.event.target,n=this.cameras.get(t),i=t.getBoundingClientRect();this.dispatchEvent("blur",{event:e.detail.event,target:t,rect:i,camera:n})}dispose(){super.dispose();for(let e=this.viewports.length;e--;)this.detachViewport(this.viewports[e]);this.pointers.dispose(),delete this.viewports,delete this.cameras,delete this.pointers,delete this.onViewportPointerdown,delete this.onViewportPointerhover,delete this.onViewportPointermove,delete this.onViewportPointerup,delete this.onViewportContextmenu,delete this.onViewportWheel,delete this.onViewportKeydown,delete this.onViewportKeyup,delete this.onViewportFocus,delete this.onViewportBlur}}let time=performance.now();const animationQueue=[],animate$1=function(){const e=performance.now(),t=e-time;time=e;for(let e=animationQueue.length;e--;)animationQueue[e].animate(t,time);requestAnimationFrame(animate$1)};requestAnimationFrame(animate$1);class Animation extends IoNode{constructor(){super(),this._time=0,this._timeRemainging=0}startAnimation(e){this._time=0,this._timeRemainging=Math.max(this._timeRemainging,1e3*e||0),-1===animationQueue.indexOf(this)&&animationQueue.push(this)}animate(e,t){this._timeRemainging>=0?(this._time=this._time+e,this._timeRemainging=this._timeRemainging-e,this.dispatchEvent("animation",{timestep:e,time:t})):this.stop()}stop(){this._time=0,this._timeRemainging=0,animationQueue.splice(animationQueue.indexOf(this),1)}stopAnimation(){this._active=!1,cancelAnimationFrame(this._rafID)}}Animation.Register();const STATE={NONE:-1,ORBIT:0,DOLLY:1,PAN:2,DOLLY_PAN:3},EPS=1e-6,direction=new Vector2,aspectMultiplier=new Vector2,orbit=new Vector2,pan=new Vector2;function dampTo(e,t,n,i){const o=1-Math.pow(n,i);return e*(1-o)+t*o}class CameraControls extends Tool{static get Properties(){return{enableOrbit:!0,enableDolly:!0,enablePan:!0,enableFocus:!0,orbitSpeed:1,dollySpeed:1,panSpeed:1,keyOrbitSpeed:.1,keyDollySpeed:.1,keyPanSpeed:.1,wheelDollySpeed:.02,autoOrbit:Vector2,autoDollyPan:Vector3,enableDamping:!0,dampingFactor:.05}}constructor(e){super(e),this.KEYS={PAN_LEFT:37,PAN_UP:38,PAN_RIGHT:39,PAN_DOWN:40,ORBIT_LEFT:65,ORBIT_RIGHT:68,ORBIT_UP:83,ORBIT_DOWN:87,DOLLY_OUT:189,DOLLY_IN:187,FOCUS:70},this.BUTTON={LEFT:MOUSE$1.LEFT,MIDDLE:MOUSE$1.MIDDLE,RIGHT:MOUSE$1.RIGHT},this.animation=new Animation,this.animation.addEventListener("animation",e=>{this.update(e.detail.timestep)}),this.addEventListener("pointermove",this.onPointermove.bind(this)),this.addEventListener("pointerup",this.onPointerup.bind(this)),this.addEventListener("wheel",this.onWheel.bind(this))}dispose(){super.dispose()}attachViewport(e,t){super.attachViewport(e,t),t._target=t._target||new Vector3,t._state=t._state||{_orbit:new Vector2,_orbitV:new Vector2,_pan:new Vector2,_panV:new Vector2,_dolly:0,_dollyV:0},t.lookAt(t._target),this.animation.startAnimation(0)}stateChanged(){this.active=this.state!==STATE.NONE,this.animation.startAnimation(0)}update(e){let t=e/1e3;for(let e=this.viewports.length;e--;){const n=this.cameras.get(this.viewports[e]);this.state!==STATE.ORBIT?this.enableDamping&&(n._state._orbitV.x=dampTo(n._state._orbitV.x,this.autoOrbit.x,this.dampingFactor,t),n._state._orbitV.y=dampTo(n._state._orbitV.y,0,this.dampingFactor,t)):n._state._orbitV.set(this.autoOrbit.x,0),n._state._orbit.x+=n._state._orbitV.x,n._state._orbit.y+=n._state._orbitV.y,this.state!==STATE.PAN?(n._state._panV.x=dampTo(n._state._panV.x,0,this.dampingFactor,t),n._state._panV.y=dampTo(n._state._panV.y,0,this.dampingFactor,t)):n._state._panV.set(0,0),n._state._pan.x+=n._state._panV.x,n._state._pan.y+=n._state._panV.y,this.state!==STATE.DOLLY?n._state._dollyV=dampTo(n._state._dollyV,0,this.dampingFactor,t):n._state._dollyV=0,n._state._dolly+=n._state._dollyV,this.enableDamping&&(this.state===STATE.ORBIT&&n._state._orbitV.copy(n._state._orbit),this.state===STATE.PAN&&n._state._panV.copy(n._state._pan),this.state===STATE.DOLLY&&(n._state._dollyV=n._state._dolly)),this.orbit(orbit.copy(n._state._orbit),n),this.dolly(n._state._dolly,n),this.pan(pan.copy(n._state._pan),n),n.lookAt(n._target),n._state._orbit.set(0,0),n._state._pan.set(0,0),n._state._dolly=0;let i=0;i=Math.max(i,Math.abs(n._state._orbitV.x)),i=Math.max(i,Math.abs(n._state._orbitV.y)),i=Math.max(i,Math.abs(n._state._panV.x)),i=Math.max(i,Math.abs(n._state._panV.y)),(i=Math.max(i,Math.abs(n._state._dollyV)))>EPS&&(this.dispatchEvent("object-mutated",{object:n},!1,window),this.dispatchEvent("object-mutated",{object:n.position},!1,window),this.dispatchEvent("object-mutated",{object:n.rotation},!1,window),this.dispatchEvent("object-mutated",{object:n.quaternion},!1,window),this.animation.startAnimation(0))}}onPointermove(e){const t=e.detail.pointers,n=e.detail.camera,i=e.detail.rect;switch(aspectMultiplier.set(i.width/i.height,1),t.length){case 1:switch(direction.copy(t[0].movement).multiply(aspectMultiplier),t[0].button){case this.BUTTON.LEFT:t.ctrlKey?this._setPan(n,direction.multiplyScalar(this.panSpeed)):t.altKey?this._setDolly(n,t[0].movement.y*this.dollySpeed):this._setOrbit(n,direction.multiplyScalar(this.orbitSpeed));break;case this.BUTTON.MIDDLE:this._setDolly(n,t[0].movement.y*this.dollySpeed);break;case this.BUTTON.RIGHT:this._setPan(n,direction.multiplyScalar(this.panSpeed))}}}onPointerup(){this.state=STATE.NONE}onKeyUp(){}onWheel(e){const t=e.detail.camera;this._setDolly(t,e.detail.event.wheelDelta*this.wheelDollySpeed)}_setPan(e,t){this.state=STATE.PAN,this.enablePan&&e._state._pan.copy(t),this.animation.startAnimation(0)}_setDolly(e,t){this.state=STATE.DOLLY,this.enableDolly&&(e._state._dolly=t),this.animation.startAnimation(0)}_setDollyPan(e,t,n){this.state=STATE.DOLLY_PAN,this.enableDolly&&(e._state._dolly=t),this.enablePan&&e._state._pan.copy(n),this.animation.startAnimation(0)}_setOrbit(e,t){this.state=STATE.ORBIT,this.enableOrbit&&e._state._orbit.copy(t),this.animation.startAnimation(0)}_setFocus(e){this.state=STATE.NONE,this.object&&this.enableFocus&&this.focus(this.object,e),this.animation.startAnimation(0)}pan(){console.warn("CameraControls: pan() not implemented!")}dolly(){console.warn("CameraControls: dolly() not implemented!")}orbit(){console.warn("CameraControls: orbit() not implemented!")}focus(){console.warn("CameraControls: focus() not implemented!")}}const eye=new Vector3,offset=new Vector3,offset2=new Vector3,unitY=new Vector3(0,1,0),tempQuat=new Quaternion,tempQuatInverse=tempQuat.clone().inverse();class OrbitCameraControls extends CameraControls{static get Properties(){return{minDistance:0,maxDistance:1/0,minZoom:0,maxZoom:1/0,minPolarAngle:0,maxPolarAngle:Math.PI,minAzimuthAngle:-1/0,maxAzimuthAngle:1/0,screenSpacePanning:!1,_spherical:Spherical}}orbit(e,t){tempQuat.setFromUnitVectors(t.up,unitY),tempQuatInverse.copy(tempQuat).inverse(),eye.copy(t.position).sub(t._target),eye.applyQuaternion(tempQuat),this._spherical.setFromVector3(eye),this._spherical.theta-=e.x,this._spherical.phi+=e.y,this._spherical.theta=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi))}dolly(e,t){let n=e>0?1-e:1/(1+e);t.isPerspectiveCamera?this._spherical.radius/=n:t.isOrthographicCamera&&(t.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,t.zoom*n))),this._spherical.makeSafe(),this._spherical.radius=Math.max(this.minDistance,Math.min(this.maxDistance,this._spherical.radius))}pan(e,t){let n,i;if(t.isPerspectiveCamera){let o=Math.tan(t.fov/2*Math.PI/180);n=e.x*eye.length()*o,i=-e.y*eye.length()*o}else t.isOrthographicCamera&&(n=e.x*(t.right-t.left)/t.zoom,i=-e.y*(t.top-t.bottom)/t.zoom);offset.setFromMatrixColumn(t.matrix,0),offset.multiplyScalar(-n),offset2.copy(offset),this.screenSpacePanning?offset.setFromMatrixColumn(t.matrix,1):(offset.setFromMatrixColumn(t.matrix,0),offset.crossVectors(t.up,offset)),offset.multiplyScalar(i),offset2.add(offset),t._target.add(offset2),offset.setFromSpherical(this._spherical),offset.applyQuaternion(tempQuatInverse),t.position.copy(t._target).add(offset),t.lookAt(t._target)}focus(){}get polarAngle(){return this._spherical.phi}get azimuthalAngle(){return this._spherical.theta}}OrbitCameraControls.Register();class ThreeViewport extends ThreeRenderer{static get Properties(){return{cameraTool:OrbitCameraControls}}get compose(){return{cameraTool:{scene:this.bind("scene")}}}connectedCallback(){super.connectedCallback(),this.cameraTool.attachViewport(this,this.camera)}disconnectedCallback(){super.disconnectedCallback(),this.cameraTool.detachViewport(this,this.camera)}cameraChanged(){this.cameraTool.attachViewport(this,this.camera)}cameraToolChanged(e){e.detail.oldValue&&e.detail.oldValue.detachViewport(this),e.detail.value.attachViewport(this,this.camera)}dispose(){this.cameraTool.detachViewport(this,this.camera)}}ThreeViewport.Register();export{ThreeInspector,ThreeRenderer,ThreeViewport};